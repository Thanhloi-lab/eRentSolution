@model eRentSolution.ViewModels.Catalog.Products.ProductViewModel
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration;
@{ ViewData["Title"] = "MyProductDetail";
                Layout = "~/Views/Shared/_Layout3.cshtml"; }

<style>
    th {
        text-align: center !important;
        vertical-align: middle !important;
    }

    td {
        text-align: center !important;
        vertical-align: middle !important;
    }
</style>
<div style="display:flex;justify-content:flex-start;align-items:center;width:100vw;height:100%;flex-direction:column; margin: 20px 0 20px 0;">
    <h1>Thông tin phòng</h1>
    <table id="customers">
        <tr>
            <th>Thuộc tính</th>
            <th>Mô tả</th>

        </tr>
        <tr>
            <td> @Html.DisplayNameFor(model => model.Id)</td>
            <td>@Html.DisplayFor(model => model.Id)</td>

        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.Name)</td>
            <td>@Html.DisplayFor(model => model.Name)</td>

        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.Description)</td>
            <td>@Html.DisplayFor(model => model.Description)</td>

        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.ThumbnailImage)</td>
            <td>@Html.DisplayFor(model => model.ThumbnailImage)</td>

        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.ViewCount)</td>
            <td>@Html.DisplayFor(model => model.ViewCount)</td>

        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.Stock)</td>
            <td>@Html.DisplayFor(model => model.Stock)</td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.DateCreated)</td>
            <td>@Html.DisplayFor(model => model.DateCreated)</td>

        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.IsFeatured)</td>
            <td>@Html.DisplayFor(model => model.IsFeatured)</td>

        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.Status)</td>
            <td>@Html.DisplayFor(model => model.Status)</td>

        </tr>
    </table>

    <table id="customers">
        <h1>Chi tiết phòng</h1>
        <tr>
            <th style="text-align:center;vertical-align:middle;">
                Tên loại sản phẩm
            </th>
            <th style="text-align:center;vertical-align:middle;">
                Chi tiết
            </th>
            <th style="text-align:center;vertical-align:middle;">
                Giá
            </th>
            <th style="text-align:center;vertical-align:middle;">
                Giá gốc
            </th>
            <th style="text-align:center;vertical-align:middle;">
                Tồn kho
            </th>
            <th style="text-align:center;vertical-align:middle;">
                Chiều rộng
            </th>
            <th style="text-align:center;vertical-align:middle;">
                Chiều dài
            </th>
            <th style="text-align:center;vertical-align:middle;">
                Diện tích
            </th>
            <th style="text-align:center;vertical-align:middle;">
                Hình ảnh
            </th>
            <th>

            </th>
        </tr>
        @foreach (var item in Model.ProductDetailViewModels)
        {
    <tr>
        <td>
            @Html.DisplayFor(model => item.ProductDetailName)
        </td>
        <td>
            <p style="word-wrap:break-word; width:200px;"> @Html.DisplayFor(model => item.Detail)</p>

        </td>
        <td>
            @Html.DisplayFor(model => item.Price)
        </td>
        <td>
            @Html.DisplayFor(model => item.OriginalPrice)
        </td>
        <td>
            @Html.DisplayFor(model => item.Stock)
        </td>
        <td>
            @Html.DisplayFor(model => item.Width)
        </td>
        <td>
            @Html.DisplayFor(model => item.Length)
        </td>
        <td>
            @(item.Width * item.Length)
        </td>
        <td>
            <div style="display:flex; width:311px;height:113px; flex-wrap:wrap; ">
                @foreach (var image in item.Images)
                {
                    <a href="#"> <img style="width: 50px; height: 50px; object-fit: cover;" src="@Configuration["BaseAddress"]/user-content/@image.ImagePath" alt="" class="box-item__img"></a>
                    <div style="display:flex; flex-direction:column;">
                        <form asp-action="EditImage" method="get" style="padding: 0 20px 0 20px;">
                            <input asp-for="@image.Id" name="imageId" type="hidden" input />
                            <input asp-for="@Model.Id" name="productId" type="hidden" input />
                            <input type="submit" value="Edit" class="btn warning small" />
                        </form>
                        <form asp-action="DeleteImage" method="get" style="padding: 0 20px 0 20px;">
                            <input asp-for="@image.Id" name="imageId" type="hidden" input />
                            <input asp-for="@item.Id" name="productDetailId" type="hidden" input />
                            <input style="width:56px;" type="submit" value="Del" class="btn danger small" />
                        </form>
                    </div>
                   
                }
            </div>

        </td>
        <td>
            <div style="display:flex;">
                <form asp-action="AddImage" method="get">
                    <input asp-for="@Model.Id" name="productId" type="hidden" input />
                    <input asp-for="@item.Id" name="productDetailId" type="hidden" input />
                    <input class="btn info" type="submit" value="Add Img" />
                </form>
                <form asp-action="EditDetail" method="get">
                    <input asp-for="@item.Id" name="productDetailId" type="hidden" input />
                    <input asp-for="@Model.Id" name="productId" type="hidden" input />
                    <input class="btn warning" type="submit" value="Edit Detail" />
                </form>
                <form asp-action="DeleteDetail" method="get">
                    <input asp-for="@item.Id" name="productDetailId" type="hidden" input />
                    <input asp-for="@Model.Id" name="productId" type="hidden" input />
                    <input class="btn danger" type="submit" value="Delete Detail" />
                </form>
            </div>

        </td>
    </tr>
}

    </table>
    <div style="display:flex; justify-content:center; align-items:center; margin-top: 20px;">
        <form asp-action="AddDetail" method="get">
            <input asp-for="@Model.Id" name="productId" type="hidden" input />
            <input style="border-radius:0; margin-right: 10px;" type="submit" value="Add Details" class="btn info" />
        </form>
        <div >
            @*@Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |*@
            <a style="margin-top:1px; display:block;" class="btn success" asp-controller="Product" asp-action="MyListProducts">Back to List</a>
        </div>
    </div>
    
</div>
<style>
    #customers {
        font-family: Arial, Helvetica, sans-serif;
        border-collapse: collapse;
        width: 50%;
    }

        #customers td, #customers th {
            border: 1px solid #ddd;
            padding: 8px;
        }

        #customers tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        #customers tr:hover {
            background-color: #ddd;
        }

        #customers th {
            padding-top: 12px;
            padding-bottom: 12px;
            text-align: left;
            background-color: #4CAF50;
            color: white;
        }

    .btn {
        border: 2px solid black;
        background-color: white;
        color: black;
        padding: 7px 14px;
        font-size: 14px;
        cursor: pointer;
        text-decoration: none;
        outline:none;
    }

    /* Green */
    .success {
        border-color: #4CAF50;
        color: green;
    }

        .success:hover {
            background-color: #4CAF50;
            color: white;
        }

    h1 {
        text-align: center;
        text-transform: uppercase;
        color: #4CAF50;
    }
    .info {
        border-color: #2196F3;
        color: dodgerblue;
    }

        .info:hover {
            background: #2196F3;
            color: white;
        }

    /* Orange */
    .warning {
        border-color: #ff9800;
        color: orange;
    }

        .warning:hover {
            background: #ff9800;
            color: white;
        }

    /* Red */
    .danger {
        border-color: #f44336;
        color: red;
    }

        .danger:hover {
            background: #f44336;
            color: white;
        }

    /* Gray */
    .default {
        border-color: #e7e7e7;
        color: black;
    }

        .default:hover {
            background: #e7e7e7;
        }
    .small{
        padding: 3px 14px;
    }
</style>


